F <- matrix(c(38,8,115,127), nr=2,  dimnames = list(c("masculino", "feminino"),
c("afetado", "nco afetado")))
fisher.test(F)
data <- read.csv(file.choose(),1)
data
View(data)
data_2 <- read.csv(file.choose(),1)
data_2
View(data_2)
data_3 <- read.csv(file.choose(),1)
View(data_3)
data_4 <- read.csv(file.choose(),1)
View(data_4)
#install.packages('xlsx')
library(xlsx)
teste <- read.xlsx(file.choose(),1, colIndex = c(5,6,9,10))
p_valores <- apply(teste,1, function(x) fisher.test(matrix(x,nr=2))$p.value$odds.ration)
p_valores <- apply(teste,1, function(x) fisher.test(matrix(x,nr=2))$p.value, odds.ration)
F <- matrix(c(38,8,115,127), nr=2,  dimnames = list(c("masculino", "feminino"),
c("afetado", "nco afetado")))
fisher.test(F)
p_valores <- apply(teste,1, function(x) fisher.test(matrix(x,nr=2)))
View(p_valores)
dados_test<- read.xlsx(file.choose(), 1)
View(dados_test)
teste <- read.xlsx(file.choose(),1, colIndex = c(6,7,10,11))
teste <- read.xlsx(file.choose(),1, colIndex = c(6,7,10,11))
p_valores <- apply(teste,1, function(x) fisher.test(matrix(x,nr=2)))
View(p_valores)
View(teste)
test_resultado <- apply(teste,1, function(x) fisher.test(matrix(x,nr=2)))
View(test_resultado)
test_resultado[[1]][["estimate"]]
data <- read.csv(file.choose(),1)
data <- read.csv(file.choose(),1)
View(data)
dados_test<- read.xlsx(file.choose(), 1)
dados_test<- read.xlsx(file.choose(), 1)
#install.packages('xlsx')
library(xlsx)
dados_test<- read.xlsx(file.choose(), 1)
teste <- read.xlsx(file.choose(),1, colIndex = c(6,7,10,11))
View(teste)
test_resultado <- apply(teste,1, function(x) fisher.test(matrix(x,nr=2)))
View(test_resultado)
test_resultado
test_resultado[[1]]
test_resultado[[2]]
test_resultado[[3]]
test_resultado[[4]]
test_resultado[[4]]
test_resultado[[5]]
test_resultado[[6]]
test_resultado[[7]]
test_resultado[[8]]
test_resultado[[9]]
test_resultado[[10]]
test_resultado[[11]]
test_resultado[[12]]
test_resultado[[13]]
test_resultado[[14]]
test_resultado[[15]]
test_resultado[[16]]
test_resultado[[17]]
test_resultado[[18]]
test_resultado[[19]]
test_resultado[[20]]
test_resultado[[21]]
test_resultado[[22]]
test_resultado[[23]]
test_resultado[[24]]
test_resultado[[25]]
test_resultado[[26]]
test_resultado[[27]]
test_resultado[[28]]
test_resultado[[29]]
test_resultado[[30]]
test_resultado[[31]]
test_resultado[[32]]
test_resultado[[33]]
test_resultado[[34]]
test_resultado[[35]]
test_resultado[[36]]
test_resultado[[37]]
test_resultado[[38]]
test_resultado[[39]]
test_resultado[[40]]
test_resultado[[41]]
test_resultado[[42]]
test_resultado[[43]]
test_resultado[[44]]
test_resultado[[42]]
test_resultado[[43]]
test_resultado[[44]]
test_resultado[[45]]
test_resultado[[46]]
test_resultado[[47]]
test_resultado[[48]]
test_resultado[[49]]
test_resultado[[50]]
test_resultado[[51]]
test_resultado[[52]]
test_resultado[[53]]
test_resultado[[54]]
test_resultado[[55]]
test_resultado[[56]]
test_resultado[[57]]
test_resultado[[58]]
test_resultado[[59]]
test_resultado[[60]]
test_resultado[[61]]
test_resultado[[62]]
test_resultado[[63]]
test_resultado[[64]]
test_resultado[[65]]
test_resultado[[66]]
test_resultado[[67]]
test_resultado[[68]]
test_resultado[[69]]
test_resultado[[70]]
test_resultado[[71]]
test_resultado[[72]]
test_resultado[[73]]
test_resultado[[74]]
test_resultado[[75]]
test_resultado[[76]]
test_resultado[[77]]
test_resultado[[78]]
test_resultado[[79]]
test_resultado[[80]]
test_resultado[[81]]
help("fisher.test")
eleicao = read.csv("Eleicao.csv",sep=';',header=T)
eleicao
trees
hist( trees$Height)
hist( trees$Height,  main="Crvores", ylab="FrequC*ncia",xlab="Altura", col="blue")
hist( trees$Height,  main="Crvores", ylab="FrequC*ncia",xlab="Altura", col="blue",
density=20, breaks=20    )
help(fisher.test)
corrgram(cars, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Carros")
install.packages("corrgram")
F <- matrix(c(38,8,115,127), nr=2,  dimnames = list(c("masculino", "feminino"),
c("afetado", "nco afetado")))
fisher.test(F)
F
fatores
fatores <- matrix(c(20,33,59,46,55,68,24,11), nr=2)
fatores
fatores <- matrix(c(20,33,59,46,55,68,24,11), nr=4)
fatores
fatores <- matrix(c(20,33,55,68,59,46,24,11), nr=4)
fatores
chisq.test(fatores)
helpe(chisq.test())
help(chisq.test())
help("chisq.test")
install.packages("ggplot")
boxplot(trees$Volume, main= "Crvores", xlab = "Volume")
boxplot(trees$Volume, main= "Crvores", xlab = "Volume", col="blue", horizontal=TRUE )
boxplot(trees$Volume, main="Crvores", xlab = "Volume", col="blue",outline=F )
#notch
boxplot( trees$Height, main="Crvores", xlab = "Altura", col="blue",  notch=TRUE )
#dados do grC!fico
boxplot.stats(trees$Height)
#lC* apenas uma informaC'C#o
boxplot.stats(trees$Height)$stats
catalog <- c("LN15","LN17","LN18","LN21","LN23","LN24")
length <- c(18,14,21,14,17,16)
breadth <- c(9,7,10,7,8,8)
thickness <- c(3,2,3,3,3,2)
material <- c("chert","chert","obsidian","chert","obsidian"
,"obsidian")
Tools <- data.frame(catalog,length,breadth,thickness,material)
str(Tools)
Tools$catalog <-as.character(Tools$catalog)
Tools
save(Tools, file="Tools.RData")
write.csv(Tools, file="Tools.csv")
View(Tools)
boxplot(Tools$length, main="largura", xlab = "material", col="blue")
#install.packages("rpart")
#install.packages("forecast")
library(rpart)
library(forecast)
updatR()
library(installr)
#install.packages("rpart")
#install.packages("forecast")
library(rpart)
library(forecast)
iris
modelo = rpart(Sepal.Length ~ Sepal.Width + Petal.Length +  Species ,data=iris)
modelo
summary(modelo)
#Executar com Crtrl+ Shift + Enter
plot(modelo)
text(modelo)
help(rpart)
predicao = predict(modelo, iris)
head(predicao)
comparacao = cbind(predicao,iris$Sepal.Length,predicao - iris$Sepal.Length )
head(comparacao)
accuracy(predicao,iris$Sepal.Length)
helpe(forecast)
help(forecast)
install.packages('rpart',dependencies=T)
library(rpart)
install.packages("rpart", dependencies = T)
install.packages("rpart", dependencies = T)
install.packages("rpart", dependencies = T)
library(rpart)
credito = read.csv("Credit.csv")
credito
amostra = sample(2,1000,replace=T, prob=c(0.7,0.3))
creditotreino = credito[amostra==1,]
creditoteste = credito[amostra==2,]
credito = read.csv("Credit.csv")
credito
amostra = sample(2,1000,replace=T, prob=c(0.7,0.3))
creditotreino = credito[amostra==1,]
creditoteste = credito[amostra==2,]
arvore = rpart(class ~ ., data=creditotreino,  method="class")
print(arvore)
#Executar com Ctrl+ Shift + Enter
plot(arvore)
text(arvore, use.n=TRUE, all=TRUE, cex=.8)
teste = predict(arvore,newdata=creditoteste)
head(teste)
cred = cbind(creditoteste,teste)
cred
cred['Result'] = ifelse(cred$bad>=0.5,"bad","good")
cred
confusao = table(cred$class,cred$Result)
confusao
taxaacerto = (confusao[1] + confusao[4]) / sum(confusao)
taxaacerto
credito = read.csv("Credit.csv")
credito
amostra = sample(2,1000,replace=T, prob=c(0.8,0.2))
creditotreino = credito[amostra==1,]
creditoteste = credito[amostra==2,]
arvore = rpart(class ~ ., data=creditotreino,  method="class")
print(arvore)
#Executar com Ctrl+ Shift + Enter
plot(arvore)
text(arvore, use.n=TRUE, all=TRUE, cex=.8)
teste = predict(arvore,newdata=creditoteste)
head(teste)
cred = cbind(creditoteste,teste)
cred
cred['Result'] = ifelse(cred$bad>=0.5,"bad","good")
cred
confusao = table(cred$class,cred$Result)
confusao
taxaacerto = (confusao[1] + confusao[4]) / sum(confusao)
taxaacerto
library(xlsx)
dados_test<- read.xlsx(file.choose(), 1)
dados_test<- read.xlsx(file.choose(), 1)
View(dados_test)
dados_test<- read.xlsx(file.choose(), 1)
View(dados_test)
dados_test<- read.xlsx(file.choose(), 1)
View(dados_test)
dados_test<- read.xlsx(file.choose(), 1)
View(dados_test)
ARC_F_M <- matrix(c(31,38,100,115), nr=2,  dimnames = list(c("Periodo anterior", "Periodo posterior"),
c("Afetado", "Nco afetado")))
ARC_F_M
F <- matrix(c(38,8,115,127), nr=2,  dimnames = list(c("masculino", "feminino"),
c("afetado", "nco afetado")))
F
Fi <- matrix(c(8,38,127,115), nr=2,  dimnames = list(c("masculino", "feminino"),
c("afetado", "nco afetado")))
fisher.test(Fi)
F <- matrix(c(38,8,115,127), nr=2,  dimnames = list(c("masculino", "feminino"),
c("afetado", "nco afetado")))
fisher.test(F)
Fi
F
EIP_MH_M <- matrix(c(30,113,222,535), nr=2, dimnames = list(c("Periodo anterior", "Periodo posterior"),
c("Afetado", "Nco afetado")))
fisher.test(EIP_MH_M)
EIP_MH_Mi <- matrix(c(113,30,535,222), nr=2, dimnames = list(c("Periodo MH", "Periodo EIP"),
c("Afetado", "Nco afetado")))
fisher.test(EIP_MH_Mi)
MH_LIP_Mi <- matrix(c(460,113,1079,535,), nr=2, dimnames = list(c("Periodo LIP", "Periodo MH"),
c("Afetado", "Nco afetado")))
fisher.test(MH_LIP_Mi)
MH_LIP_Mi <- matrix(c(460,113,1079,535,), nr=2, dimnames = list(c("Periodo LIP", "Periodo MH"),
c("Afetado", "Nco afetado")))
MH_LIP_Mi <- matrix(c(460,113,1079,535), nr=2, dimnames = list(c("Periodo LIP", "Periodo MH"),
c("Afetado", "Nco afetado")))
fisher.test(MH_LIP_Mi)
ARC_F_M <- matrix(c(31,38,100,115), nr=2,  dimnames = list(c("Periodo anterior", "Periodo posterior"),
c("Afetado", "Nco afetado")))
ARC_F_M
ARC_F_F <- matrix(c(12,8,111,127), nr=2, dimnames = list(c("Periodo anterior", "Periodo posterior"),
c("Afetado", "Nco afetado")))
ARC_F_F
ARC <- matrix(c(31,12,100,111), nr=2, dimnames = list(c("masculino", "feminino"), c("afetado", "nao afetado")))
ARCi <- matrix(c(12,31,111,100), nr=2, dimnames = list(c("masculino", "feminino"), c("afetado", "nao afetado")))
fisher.test(ARCi)
ARC_F_Mi <- matrix(c(38,31,115,100), nr=2,  dimnames = list(c("Periodo F", "Periodo ARC"),
c("Afetado", "Nco afetado")))
fisher.test(ARC_F_Mi)
F_EIP_Fi <- matrix(c(20,8,151,127), nr=2, dimnames = list(c("Periodo EIP", "Periodo F"),
c("Afetado", "Nco afetado")))
fisher.test(F_EIP_Fi)
MH_LIP_Fi <- matrix(c(313,62,853,696), nr=2, dimnames = list(c("Periodo LIP", "Periodo MHr"),
c("Afetado", "Nco afetado")))
fisher.test(MH_LIP_Fi)
MH_LIP_Mi <- matrix(c(460,113,1079,535), nr=2, dimnames = list(c("Periodo LIP", "Periodo MH"),
c("Afetado", "Nco afetado")))
fisher.test(MH_LIP_Mi)
EIP_MH_Mi <- matrix(c(113,30,535,222), nr=2, dimnames = list(c("Periodo MH", "Periodo EIP"),
c("Afetado", "Nco afetado")))
fisher.test(EIP_MH_Mi)
#importa dados, string vazio como NA, string como fatores
dados = read.csv("Churn.csv", sep = ";", na.strings="", stringsAsFactors=T)
head(dados)
summary(dados)
#Dar nomes corretos as colunas
colnames(dados) = c("Id","Score","Estado","Genero","Idade","Patrimonio","Saldo","Produtos","TemCartCredito","Ativo","Salario","Saiu")
head(dados)
#Estados
counts = table(dados$Estado)
barplot(counts, main="Estados", xlab="Estados")
#GC*nero
counts = table(dados$Genero)
barplot(counts, main="GC*neros", xlab="GC*neros")
library(readxl)
dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
View(dados)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
library(readxl)
dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
library(readxl)
dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
library(readxl)
dados <- read_excel("~/PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
summary(dados$N_id)
library(readxl)
dados <- read_excel("~/PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
summary(dados$N_id)
boxplot(dados$N_id)
plot(trees$Girth, trees$Volume)
plot(trees$Girth, trees$Volume, main="Crvores")
plot(trees$Girth, trees$Volume, ylab="CirunferC*ncia", xlab="Volume", col="blue", main="Crvores")
#pch muda o elementog grC!fico
plot(trees$Girth, trees$Volume, ylab="CirunferC*ncia", xlab="Volume", col="blue", main="Crvores", pch=20)
boxplot(trees)
#Executar com ctrl+shift+enter
barplot(spray$count,col= gray.colors(6), xlab="Spray", ylab="Total", names.arg=spray$spray)
InsectSprays
spray = aggregate(. ~ spray, data=InsectSprays,sum)
spray
#Executar com ctrl+shift+enter
barplot(spray$count,col= gray.colors(6), xlab="Spray", ylab="Total", names.arg=spray$spray)
box()
library(readxl)
dados <- read_excel("~/PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
summary(dados$N_id)
boxplot(dados$N_id)
dados[dados$Sexo=='M']
library(readxl)
dados <- read_excel("~/PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
#summary(dados$N_id)
#boxplot(dados$N_id)
#dados[dados$Sexo=='M']
view(dados)
view(dados)
library(readxl)
dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
View(dados)
library(readxl)
dados <- read_excel("~/PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
#summary(dados$N_id)
#boxplot(dados$N_id)
#dados[dados$Sexo=='M']
View(dados)
summary(dados)
dados[order(dados$sexo=="M")]
dados[order(dados$Sexo=="M")]
install.packages("tydverse")
library(tydverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
setwd("~/PROJETOS/Human-conflict/Dissertação/Bases de dados")
library(tidyverse)
#library(readxl)
#dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
library(readr)
dados_base <- read.csv2(file ="dados_base.csv")
#dados_base
#install.packages("magrittr")
library(magrittr)
#install.packages(c("dplyr", "tidyr"))
library(dplyr)
library(tidyr)
#install.packages("tibble")
library(tibble)
as_tibble(dados_base)
#selecionando variáveis para análise usando funções do pacote "dplyr"
dados_analise = select(dados_base,Região,Sítio,Elevação.m.:Perimortem_anterior,Total_posterior:Perimortem_posterior)
dados_analise
dados_analise %>%
filter(Sexo == "M") %>%
select(Região:Lateral.D)
setwd("~/PROJETOS/Human-conflict/Dissertação/Bases de dados")
library(tidyverse)
#library(readxl)
#dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
library(readr)
dados_base <- read.csv2(file ="dados_base.csv")
#dados_base
#install.packages("magrittr")
library(magrittr)
#install.packages(c("dplyr", "tidyr"))
library(dplyr)
library(tidyr)
#install.packages("tibble")
library(tibble)
as_tibble(dados_base)
#selecionando variáveis para análise usando funções do pacote "dplyr"
dados_analise = select(dados_base,Região,Sítio,Elevação.m.:Perimortem_anterior,Total_posterior:Perimortem_posterior)
dados_analise
dados_analise %>%
filter(Sexo == "M") %>%
select(Região:Lateral.D)
setwd("~/PROJETOS/Human-conflict/Dissertação/Bases de dados")
library(tidyverse)
#library(readxl)
#dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
library(readr)
dados_base <- read.csv2(file ="dados_base.csv")
#dados_base
#install.packages("magrittr")
library(magrittr)
#install.packages(c("dplyr", "tidyr"))
library(dplyr)
library(tidyr)
#install.packages("tibble")
library(tibble)
as_tibble(dados_base)
#selecionando variáveis para análise usando funções do pacote "dplyr"
dados_analise = select(dados_base,Região,Sítio,Elevação.m.:Perimortem_anterior,Total_posterior:Perimortem_posterior)
dados_analise
dados_analise %>%
filter(Sexo == "M") %>%
select(Região:Lateral.D)
setwd("~/PROJETOS/Human-conflict/Dissertação/Bases de dados")
library(tidyverse)
#library(readxl)
#dados <- read_excel("PROJETOS/Human-conflict/Dissertação/Bases de dados/dados.xlsx")
#View(dados)
library(readr)
dados_base <- read.csv2(file ="dados_base.csv")
#dados_base
#install.packages("magrittr")
library(magrittr)
#install.packages(c("dplyr", "tidyr"))
library(dplyr)
library(tidyr)
#install.packages("tibble")
library(tibble)
as_tibble(dados_base)
#selecionando variáveis para análise usando funções do pacote "dplyr"
dados_analise = select(dados_base,Região,Sítio,Elevação.m.:Perimortem_anterior,Total_posterior:Perimortem_posterior)
dados_analise
dados_analise %>%
filter(Sexo == "M") %>%
select(Região:Lateral.D)
setwd("~/PROJETOS/Human-conflict/Dissertação/Bases de dados")
library(tidyverse)
library(readr)
dados_base <- read.csv2(file ="dados_base.csv")
library(magrittr)
library(dplyr)
library(tidyr)
library(tibble)
as_tibble(dados_base)
dados_base %>%
filter(Sexo == "M") %>%
select(Região:Lateral.D)
dados_base_M = dados_base %>%  filter(Sexo == "M") %>% select(Região:Lateral.D)
dados_base_M
dados_base_F = dados_base %>%  filter(Sexo == "F") %>% select(Região:Lateral.D)
dados_base_Nid = dados_base %>%  filter(Sexo == "Nid") %>% select(Região:Lateral.D)
View(dados_base_M)
dados_base %>% mutate(fr_trauma = N_id_afetados/N_id)
dados_base %>% mutate(fr_trauma = N_id_afetados/N_id, fr_trauma_anti = N_id_antimortem/N_id)
#Adicionando frequencia relativa de trauma
dados_base %>%
mutate(fr_trauma = N_id_afetados/N_id, fr_trauma_anti = N_id_antimortem/N_id,
fr_trauma_peri = N_id_perimortem/N_id)
